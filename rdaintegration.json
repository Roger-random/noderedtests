[
    {
        "id": "96d8407e.610f7",
        "type": "tab",
        "label": "Integration test",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f6022c18.85fce",
        "type": "serial in",
        "z": "96d8407e.610f7",
        "name": "Futek USB220",
        "serial": "f999bb85.1e4368",
        "x": 80,
        "y": 100,
        "wires": [
            [
                "df32ebf1.700e48",
                "6fd93c71.ed7384"
            ]
        ]
    },
    {
        "id": "df32ebf1.700e48",
        "type": "ui_chart",
        "z": "96d8407e.610f7",
        "name": "Futek load cell chart",
        "group": "3a66ae69.d9db02",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "500",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 320,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6fd93c71.ed7384",
        "type": "trigger",
        "z": "96d8407e.610f7",
        "name": "Futek connection watchdog",
        "op1": "Connected",
        "op2": "Disconnected",
        "op1type": "str",
        "op2type": "str",
        "duration": "250",
        "extend": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 100,
        "wires": [
            [
                "2a674f0.44fd1b2"
            ]
        ]
    },
    {
        "id": "2a674f0.44fd1b2",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "3a66ae69.d9db02",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Futek connection status",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 630,
        "y": 100,
        "wires": []
    },
    {
        "id": "bf09909f.f88d3",
        "type": "serial request",
        "z": "96d8407e.610f7",
        "name": "Applied Motion Control ST5-Q-NN",
        "serial": "7dc604c4.8f712c",
        "x": 680,
        "y": 660,
        "wires": [
            [
                "bf596881.4039b8",
                "f0cf3d18.f1c6b",
                "f5e04df0.ab9a6",
                "3719986e.a52938",
                "3de68aa6.134616",
                "e99d4472.84f3d8"
            ]
        ]
    },
    {
        "id": "bf596881.4039b8",
        "type": "debug",
        "z": "96d8407e.610f7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 360,
        "wires": []
    },
    {
        "id": "822a183a.e285f8",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "FP0",
        "payloadType": "str",
        "x": 270,
        "y": 820,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "afaafb74.1176c8",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "FP250000",
        "payloadType": "str",
        "x": 280,
        "y": 900,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "31d0a634.5aae5a",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "FP25000",
        "payloadType": "str",
        "x": 280,
        "y": 860,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "673cebae.548cf4",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "AL",
        "payloadType": "str",
        "x": 270,
        "y": 980,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "cdba1278.56351",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "AR",
        "payloadType": "str",
        "x": 270,
        "y": 1020,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "1bd71f19.484051",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Request position",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "IP",
        "payloadType": "str",
        "x": 250,
        "y": 700,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "d9e4ed63.dee94",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Initialize Drive",
        "func": "// MV  = queries version information\n// PR4 = send ACK response after receiving commands\n// IFH = hexadecimal values returned from immediate commands\n// IU  = input voltage\n// IT  = temperature\n// SP0 = set current position as zero\n// AC2 = acceleration rev/sec/sec\n// DE2 = deceleration rev/sec/sec\n// VE2 = move velocity rev/sec\n// ME  = motor enable\nvar initSequence = \"MV PR4 IFH IU IT SP0 AC2 DE2 VE2 ME\"\nvar outputMsgs = [];\nvar commands = initSequence.split(' ');\nfor (var command in commands) {\n    outputMsgs.push({payload:commands[command]});\n}\n\nreturn [ outputMsgs ];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "31f9a064.bbb0b",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Go",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 440,
        "wires": [
            [
                "d9e4ed63.dee94"
            ]
        ]
    },
    {
        "id": "446f6b43.47a674",
        "type": "ui_gauge",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "899ee030.4e6a2",
        "order": 8,
        "width": 3,
        "height": "2",
        "gtype": "gage",
        "title": "Power Supply",
        "label": "Volts",
        "format": "{{value}}",
        "min": "40",
        "max": "56",
        "colors": [
            "#ff0000",
            "#00ff00",
            "#ff0000"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1160,
        "y": 400,
        "wires": []
    },
    {
        "id": "f0cf3d18.f1c6b",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Voltage update",
        "func": "if (msg.request_payload === \"IU\" && \n    msg.status === \"OK\") {\n    var decivolts = parseInt(msg.payload.substring(3,7),16);\n    return {payload:decivolts/10.0}\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 400,
        "wires": [
            [
                "446f6b43.47a674"
            ]
        ]
    },
    {
        "id": "f5e04df0.ab9a6",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Temperature update",
        "func": "if (msg.request_payload === \"IT\" && \n    msg.status === \"OK\") {\n    var decivolts = parseInt(msg.payload.substring(3,7),16);\n    return {payload:decivolts/10.0}\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 440,
        "wires": [
            [
                "a269f080.96948"
            ]
        ]
    },
    {
        "id": "a269f080.96948",
        "type": "ui_gauge",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "899ee030.4e6a2",
        "order": 7,
        "width": 3,
        "height": "2",
        "gtype": "gage",
        "title": "Temperature",
        "label": "degrees C",
        "format": "{{value}}",
        "min": 0,
        "max": "90",
        "colors": [
            "#0000ff",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1190,
        "y": 440,
        "wires": []
    },
    {
        "id": "a4eb67bf.a17948",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "66a4bb10.233fa4",
        "order": 1,
        "width": "6",
        "height": "6",
        "passthru": false,
        "label": "STOP",
        "tooltip": "",
        "color": "White",
        "bgcolor": "Red",
        "icon": "",
        "payload": "SKD",
        "payloadType": "str",
        "topic": "",
        "x": 270,
        "y": 520,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "19f0f5cb.ec9d9a",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Request voltage",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "IU",
        "payloadType": "str",
        "x": 250,
        "y": 580,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "f14759d.77352a8",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Request temperature",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "IT",
        "payloadType": "str",
        "x": 240,
        "y": 620,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "c6daa3e9.21a18",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Request status",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SC",
        "payloadType": "str",
        "x": 260,
        "y": 660,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "88e74aae.736ec8",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "899ee030.4e6a2",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Position",
        "label": "Position: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1140,
        "y": 480,
        "wires": []
    },
    {
        "id": "3719986e.a52938",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Position update",
        "func": "if (msg.request_payload === \"IP\" && \n    msg.status === \"OK\") {\n    var position = parseInt(msg.payload.substring(3,11),16);\n    return {payload:position}\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 480,
        "wires": [
            [
                "88e74aae.736ec8"
            ]
        ]
    },
    {
        "id": "3de68aa6.134616",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Status code",
        "func": "if (msg.request_payload === \"SC\" && \n    msg.status === \"OK\") {\n    var status = parseInt(msg.payload.substring(3,11),16);\n    \n    var enabled = Boolean(0 !== (status & 0x0001));\n    // 0x0002 = Sampling (for Quick Tuner)\n    // 0x0004 = fault, incorporated into 'alarm' 0x0200 check\n    // 0x0008 = not valid on ST series\n    var moving = Boolean(0 !== (status & 0x0010));\n    // 0x0020 = jogging operation\n    // 0x0040 = stopping\n    // 0x0080 = waiting (WI)\n    // 0x0100 = saving\n    var alarm = Boolean(0 !== (status & 0x0204));\n    // 0x0400 = Homing\n    // 0x0800 = Waiting (WD or WT)\n    // 0x1000 = Timing wizard\n    // 0x2000 = Checking encoder\n    // 0x4000 = Q program is running\n    // 0x8000 = Initializing (power up)\n    \n    return [ {payload:enabled},\n             {payload:moving},\n             {payload:alarm} ];\n}\nreturn null;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 300,
        "wires": [
            [
                "3ebb364d.72384a"
            ],
            [
                "33e675fe.8729da"
            ],
            [
                "a56adcb8.4c6e5"
            ]
        ],
        "outputLabels": [
            "Enabled",
            "Moving",
            "Alarm"
        ]
    },
    {
        "id": "33e675fe.8729da",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "899ee030.4e6a2",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Moving",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1180,
        "y": 300,
        "wires": []
    },
    {
        "id": "a56adcb8.4c6e5",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "899ee030.4e6a2",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Alarm",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1170,
        "y": 340,
        "wires": []
    },
    {
        "id": "b2d9b253.ef171",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "899ee030.4e6a2",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Status code",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1170,
        "y": 520,
        "wires": []
    },
    {
        "id": "e99d4472.84f3d8",
        "type": "switch",
        "z": "96d8407e.610f7",
        "name": "Status code update",
        "property": "request_payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SC",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 990,
        "y": 520,
        "wires": [
            [
                "b2d9b253.ef171"
            ]
        ]
    },
    {
        "id": "71289403.d98b6c",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "899ee030.4e6a2",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Motor Enable",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "ME",
        "payloadType": "str",
        "topic": "",
        "x": 430,
        "y": 360,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "531c4637.4205f8",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "899ee030.4e6a2",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Motor Disable",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "MD",
        "payloadType": "str",
        "topic": "",
        "x": 440,
        "y": 400,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "3ebb364d.72384a",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Enable Based On Motor Status",
        "func": "if (msg.payload) {\n    return [ {enabled:false},\n             {enabled:true}];\n} else {\n    return [ {enabled:true},\n             {enabled:false}];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1250,
        "y": 200,
        "wires": [
            [
                "f5742234.ae4e9"
            ],
            [
                "ceda660d.9e1c88"
            ]
        ],
        "outputLabels": [
            "When Motor Disabled",
            "When Motor Enabled"
        ]
    },
    {
        "id": "f5742234.ae4e9",
        "type": "link out",
        "z": "96d8407e.610f7",
        "name": "Enable when Motor Disabled",
        "links": [
            "87eaaadc.193ba8"
        ],
        "x": 1455,
        "y": 180,
        "wires": []
    },
    {
        "id": "ceda660d.9e1c88",
        "type": "link out",
        "z": "96d8407e.610f7",
        "name": "Enable when Motor Enabled",
        "links": [
            "41e86b6b.1e90a4"
        ],
        "x": 1455,
        "y": 220,
        "wires": []
    },
    {
        "id": "87eaaadc.193ba8",
        "type": "link in",
        "z": "96d8407e.610f7",
        "name": "",
        "links": [
            "f5742234.ae4e9"
        ],
        "x": 315,
        "y": 360,
        "wires": [
            [
                "71289403.d98b6c"
            ]
        ]
    },
    {
        "id": "41e86b6b.1e90a4",
        "type": "link in",
        "z": "96d8407e.610f7",
        "name": "",
        "links": [
            "ceda660d.9e1c88"
        ],
        "x": 315,
        "y": 400,
        "wires": [
            [
                "531c4637.4205f8"
            ]
        ]
    },
    {
        "id": "f999bb85.1e4368",
        "type": "serial-port",
        "z": "",
        "serialport": "COM4",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "\\r\\n",
        "responsetimeout": "1000"
    },
    {
        "id": "3a66ae69.d9db02",
        "type": "ui_group",
        "z": "",
        "name": "Futek Load Cell",
        "tab": "997e5be5.fc44a8",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": true
    },
    {
        "id": "7dc604c4.8f712c",
        "type": "serial-port",
        "z": "",
        "serialport": "COM3",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "100",
        "bin": "false",
        "out": "time",
        "addchar": "\\r",
        "responsetimeout": "1000"
    },
    {
        "id": "899ee030.4e6a2",
        "type": "ui_group",
        "z": "",
        "name": "Motor Status",
        "tab": "997e5be5.fc44a8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "66a4bb10.233fa4",
        "type": "ui_group",
        "z": "",
        "name": "Motor Control",
        "tab": "997e5be5.fc44a8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "997e5be5.fc44a8",
        "type": "ui_tab",
        "z": "",
        "name": "Integration Test",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]