[
    {
        "id": "96d8407e.610f7",
        "type": "tab",
        "label": "Integration test",
        "disabled": false,
        "info": ""
    },
    {
        "id": "543cd990.8704a8",
        "type": "subflow",
        "name": "Enable based on Boolean",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "3ebb364d.72384a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 500,
                "y": 80,
                "wires": [
                    {
                        "id": "3ebb364d.72384a",
                        "port": 0
                    }
                ]
            },
            {
                "x": 500,
                "y": 80,
                "wires": [
                    {
                        "id": "3ebb364d.72384a",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "inputLabels": [
            "Boolean payload"
        ],
        "outputLabels": [
            "Enabled when input is False",
            "Enabled when input is True"
        ]
    },
    {
        "id": "61f0bf90.696a1",
        "type": "subflow",
        "name": "Set Position",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "6765bbee.7bf5f4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "6765bbee.7bf5f4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "f999bb85.1e4368",
        "type": "serial-port",
        "z": "",
        "serialport": "COM4",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "\\r\\n",
        "responsetimeout": "1000"
    },
    {
        "id": "a273c16d.a6548",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#dd8dc4",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#dd8dc4",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#dd8dc4",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#efc8e2",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#dd8dc4",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "RogTest Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "997e5be5.fc44a8",
        "type": "ui_tab",
        "z": "",
        "name": "Integration Test",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3a66ae69.d9db02",
        "type": "ui_group",
        "z": "",
        "name": "Futek Load Cell",
        "tab": "997e5be5.fc44a8",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": true
    },
    {
        "id": "7dc604c4.8f712c",
        "type": "serial-port",
        "z": "",
        "serialport": "COM3",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "100",
        "bin": "false",
        "out": "time",
        "addchar": "\\r",
        "responsetimeout": "1000"
    },
    {
        "id": "899ee030.4e6a2",
        "type": "ui_group",
        "z": "",
        "name": "Motor Status",
        "tab": "997e5be5.fc44a8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "66a4bb10.233fa4",
        "type": "ui_group",
        "z": "",
        "name": "Motor Control",
        "tab": "997e5be5.fc44a8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f6022c18.85fce",
        "type": "serial in",
        "z": "96d8407e.610f7",
        "name": "Futek USB220",
        "serial": "f999bb85.1e4368",
        "x": 80,
        "y": 100,
        "wires": [
            [
                "df32ebf1.700e48",
                "6fd93c71.ed7384"
            ]
        ]
    },
    {
        "id": "df32ebf1.700e48",
        "type": "ui_chart",
        "z": "96d8407e.610f7",
        "name": "Futek load cell chart",
        "group": "3a66ae69.d9db02",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "500",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 320,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6fd93c71.ed7384",
        "type": "trigger",
        "z": "96d8407e.610f7",
        "name": "Futek connection watchdog",
        "op1": "Connected",
        "op2": "Disconnected",
        "op1type": "str",
        "op2type": "str",
        "duration": "250",
        "extend": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 340,
        "y": 100,
        "wires": [
            [
                "2a674f0.44fd1b2"
            ]
        ]
    },
    {
        "id": "2a674f0.44fd1b2",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "3a66ae69.d9db02",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Futek connection status",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 630,
        "y": 100,
        "wires": []
    },
    {
        "id": "bf09909f.f88d3",
        "type": "serial request",
        "z": "96d8407e.610f7",
        "name": "Applied Motion Control ST5-Q-NN",
        "serial": "7dc604c4.8f712c",
        "x": 680,
        "y": 660,
        "wires": [
            [
                "bf596881.4039b8",
                "f0cf3d18.f1c6b",
                "f5e04df0.ab9a6",
                "3719986e.a52938",
                "3de68aa6.134616",
                "e99d4472.84f3d8"
            ]
        ]
    },
    {
        "id": "bf596881.4039b8",
        "type": "debug",
        "z": "96d8407e.610f7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 360,
        "wires": []
    },
    {
        "id": "673cebae.548cf4",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "AL",
        "payloadType": "str",
        "x": 230,
        "y": 760,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "cdba1278.56351",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "AR",
        "payloadType": "str",
        "x": 230,
        "y": 800,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "1bd71f19.484051",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Request position",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "IP",
        "payloadType": "str",
        "x": 250,
        "y": 700,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "d9e4ed63.dee94",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Initialize Drive",
        "func": "// MV  = queries version information\n// PR4 = send ACK response after receiving commands\n// IFH = hexadecimal values returned from immediate commands\n// IU  = input voltage\n// IT  = temperature\n// SP0 = set current position as zero\n// AC2 = acceleration rev/sec/sec\n// DE2 = deceleration rev/sec/sec\n// VE2 = move velocity rev/sec\n// ME  = motor enable\nvar initSequence = \"MV PR4 IFH IU IT SP0 AC2 DE2 VE2 ME\"\nvar outputMsgs = [];\nvar commands = initSequence.split(' ');\nfor (var command in commands) {\n    outputMsgs.push({payload:commands[command]});\n}\n\nreturn [ outputMsgs ];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 300,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "31f9a064.bbb0b",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Go",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 300,
        "wires": [
            [
                "d9e4ed63.dee94"
            ]
        ]
    },
    {
        "id": "446f6b43.47a674",
        "type": "ui_gauge",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "899ee030.4e6a2",
        "order": 8,
        "width": 3,
        "height": "2",
        "gtype": "gage",
        "title": "Power Supply",
        "label": "Volts",
        "format": "{{value}}",
        "min": "40",
        "max": "56",
        "colors": [
            "#ff0000",
            "#00ff00",
            "#ff0000"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1160,
        "y": 400,
        "wires": []
    },
    {
        "id": "f0cf3d18.f1c6b",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Voltage update",
        "func": "if (msg.request_payload === \"IU\" && \n    msg.status === \"OK\") {\n    var decivolts = parseInt(msg.payload.substring(3,7),16);\n    return {payload:decivolts/10.0}\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 400,
        "wires": [
            [
                "446f6b43.47a674"
            ]
        ]
    },
    {
        "id": "f5e04df0.ab9a6",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Temperature update",
        "func": "if (msg.request_payload === \"IT\" && \n    msg.status === \"OK\") {\n    var decivolts = parseInt(msg.payload.substring(3,7),16);\n    return {payload:decivolts/10.0}\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 440,
        "wires": [
            [
                "a269f080.96948"
            ]
        ]
    },
    {
        "id": "a269f080.96948",
        "type": "ui_gauge",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "899ee030.4e6a2",
        "order": 7,
        "width": 3,
        "height": "2",
        "gtype": "gage",
        "title": "Temperature",
        "label": "degrees C",
        "format": "{{value}}",
        "min": 0,
        "max": "90",
        "colors": [
            "#0000ff",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1190,
        "y": 440,
        "wires": []
    },
    {
        "id": "a4eb67bf.a17948",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "66a4bb10.233fa4",
        "order": 7,
        "width": "6",
        "height": "6",
        "passthru": false,
        "label": "STOP",
        "tooltip": "",
        "color": "White",
        "bgcolor": "Red",
        "icon": "",
        "payload": "SKD",
        "payloadType": "str",
        "topic": "",
        "x": 270,
        "y": 520,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "19f0f5cb.ec9d9a",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Request voltage",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "IU",
        "payloadType": "str",
        "x": 250,
        "y": 580,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "f14759d.77352a8",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Request temperature",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "IT",
        "payloadType": "str",
        "x": 240,
        "y": 620,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "c6daa3e9.21a18",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Request status",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SC",
        "payloadType": "str",
        "x": 260,
        "y": 660,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "88e74aae.736ec8",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "899ee030.4e6a2",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Position",
        "label": "Position: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1140,
        "y": 480,
        "wires": []
    },
    {
        "id": "3719986e.a52938",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Position update",
        "func": "if (msg.request_payload === \"IP\" && \n    msg.status === \"OK\") {\n    var position = parseInt(msg.payload.substring(3,11),16);\n    global.set(\"IP\", position);\n    return {payload:position}\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 480,
        "wires": [
            [
                "88e74aae.736ec8"
            ]
        ]
    },
    {
        "id": "3de68aa6.134616",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Status code",
        "func": "if (msg.request_payload === \"SC\" && \n    msg.status === \"OK\") {\n    var status = parseInt(msg.payload.substring(3,11),16);\n    \n    var enabled = Boolean(0 !== (status & 0x0001));\n    // 0x0002 = Sampling (for Quick Tuner)\n    // 0x0004 = fault, incorporated into 'alarm' 0x0200 check\n    // 0x0008 = not valid on ST series\n    var moving = Boolean(0 !== (status & 0x0010));\n    // 0x0020 = jogging operation\n    // 0x0040 = stopping\n    // 0x0080 = waiting (WI)\n    // 0x0100 = saving\n    var alarm = Boolean(0 !== (status & 0x0204));\n    // 0x0400 = Homing\n    // 0x0800 = Waiting (WD or WT)\n    // 0x1000 = Timing wizard\n    // 0x2000 = Checking encoder\n    // 0x4000 = Q program is running\n    // 0x8000 = Initializing (power up)\n    \n    return [ {payload:enabled},\n             {payload:moving},\n             {payload:alarm} ];\n}\nreturn null;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 300,
        "wires": [
            [
                "834cae55.f981f"
            ],
            [
                "33e675fe.8729da"
            ],
            [
                "a56adcb8.4c6e5"
            ]
        ],
        "outputLabels": [
            "Enabled",
            "Moving",
            "Alarm"
        ]
    },
    {
        "id": "33e675fe.8729da",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "899ee030.4e6a2",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Moving",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1180,
        "y": 300,
        "wires": []
    },
    {
        "id": "a56adcb8.4c6e5",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "899ee030.4e6a2",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Alarm",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1170,
        "y": 340,
        "wires": []
    },
    {
        "id": "b2d9b253.ef171",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "899ee030.4e6a2",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Status code",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1170,
        "y": 520,
        "wires": []
    },
    {
        "id": "e99d4472.84f3d8",
        "type": "switch",
        "z": "96d8407e.610f7",
        "name": "Status code update",
        "property": "request_payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SC",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 990,
        "y": 520,
        "wires": [
            [
                "b2d9b253.ef171"
            ]
        ]
    },
    {
        "id": "71289403.d98b6c",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "899ee030.4e6a2",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Motor Enable",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "ME",
        "payloadType": "str",
        "topic": "",
        "x": 350,
        "y": 400,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "531c4637.4205f8",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "899ee030.4e6a2",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Motor Disable",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "MD",
        "payloadType": "str",
        "topic": "",
        "x": 340,
        "y": 440,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "3ebb364d.72384a",
        "type": "function",
        "z": "543cd990.8704a8",
        "name": "Enable Based On Boolean Input",
        "func": "if (msg.payload) {\n    return [ {enabled:false},\n             {enabled:true}];\n} else {\n    return [ {enabled:true},\n             {enabled:false}];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 80,
        "wires": [
            [],
            []
        ],
        "outputLabels": [
            "Enabled when False",
            "Enabled when True"
        ]
    },
    {
        "id": "f5742234.ae4e9",
        "type": "link out",
        "z": "96d8407e.610f7",
        "name": "Enable when Motor Disabled",
        "links": [
            "87eaaadc.193ba8"
        ],
        "x": 1455,
        "y": 180,
        "wires": []
    },
    {
        "id": "ceda660d.9e1c88",
        "type": "link out",
        "z": "96d8407e.610f7",
        "name": "Enable when Motor Enabled",
        "links": [
            "41e86b6b.1e90a4"
        ],
        "x": 1455,
        "y": 220,
        "wires": []
    },
    {
        "id": "87eaaadc.193ba8",
        "type": "link in",
        "z": "96d8407e.610f7",
        "name": "",
        "links": [
            "f5742234.ae4e9"
        ],
        "x": 215,
        "y": 400,
        "wires": [
            [
                "71289403.d98b6c"
            ]
        ]
    },
    {
        "id": "41e86b6b.1e90a4",
        "type": "link in",
        "z": "96d8407e.610f7",
        "name": "",
        "links": [
            "ceda660d.9e1c88"
        ],
        "x": 215,
        "y": 440,
        "wires": [
            [
                "531c4637.4205f8"
            ]
        ]
    },
    {
        "id": "834cae55.f981f",
        "type": "subflow:543cd990.8704a8",
        "z": "96d8407e.610f7",
        "name": "Enable based on Motor Enable",
        "env": [],
        "x": 1250,
        "y": 200,
        "wires": [
            [
                "f5742234.ae4e9"
            ],
            [
                "ceda660d.9e1c88"
            ]
        ]
    },
    {
        "id": "7c6d5f79.c2107",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Convert mm to stepper position",
        "func": "var targetMM = msg.payload; // in millimeters\n\n// Convert millimeter to stepper position.\n// There are 25000 positions per revolution.\n// Each revolution is 0.083\" (pitch of leadscrew.)\n// 1\" = 25.4mm\n// Positive step is downwards, so invert sign to align with Z axis\n\nvar targetPos = (-targetMM * 25000)/(25.4 * 0.083)\n\nmsg.payload = \"FP\" + Math.round(targetPos).toString();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 1040,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    },
    {
        "id": "dc5f2b9.68defd8",
        "type": "ui_text_input",
        "z": "96d8407e.610f7",
        "name": "",
        "label": "Target Position (mm)",
        "tooltip": "",
        "group": "66a4bb10.233fa4",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 200,
        "y": 1040,
        "wires": [
            [
                "7c6d5f79.c2107"
            ]
        ]
    },
    {
        "id": "7e77ceb.2dd183",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "66a4bb10.233fa4",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Set Position A",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "PositionA",
        "payloadType": "str",
        "topic": "",
        "x": 180,
        "y": 1080,
        "wires": [
            [
                "72dc303d.e479"
            ]
        ]
    },
    {
        "id": "3e4c95e7.1bd93a",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "66a4bb10.233fa4",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Set Position B",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "PositionB",
        "payloadType": "str",
        "topic": "",
        "x": 180,
        "y": 1120,
        "wires": [
            [
                "98350517.65a618"
            ]
        ]
    },
    {
        "id": "6765bbee.7bf5f4",
        "type": "function",
        "z": "61f0bf90.696a1",
        "name": "Set Position",
        "func": "var position = global.get(\"IP\"); // Most recent position from Immediate Position\nglobal.set(msg.payload, position);\nmsg.payload = position;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "da8c8824.f4cfe8",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "66a4bb10.233fa4",
        "order": 4,
        "width": "3",
        "height": "1",
        "name": "Position A",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 600,
        "y": 1080,
        "wires": []
    },
    {
        "id": "337e453a.a416ca",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "66a4bb10.233fa4",
        "order": 6,
        "width": "3",
        "height": "1",
        "name": "Position B",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 600,
        "y": 1120,
        "wires": []
    },
    {
        "id": "72dc303d.e479",
        "type": "subflow:61f0bf90.696a1",
        "z": "96d8407e.610f7",
        "name": "",
        "env": [],
        "x": 390,
        "y": 1080,
        "wires": [
            [
                "da8c8824.f4cfe8"
            ]
        ]
    },
    {
        "id": "98350517.65a618",
        "type": "subflow:61f0bf90.696a1",
        "z": "96d8407e.610f7",
        "name": "",
        "x": 390,
        "y": 1120,
        "wires": [
            [
                "337e453a.a416ca"
            ]
        ]
    },
    {
        "id": "ce9e452f.2f6a28",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Set autocycle state",
        "func": "flow.set(\"Autocycle\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "10c715b5.1f0daa",
        "type": "ui_switch",
        "z": "96d8407e.610f7",
        "name": "",
        "label": "Autocycle",
        "tooltip": "",
        "group": "66a4bb10.233fa4",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 160,
        "y": 1000,
        "wires": [
            [
                "ce9e452f.2f6a28"
            ]
        ]
    },
    {
        "id": "1bde2352.dffe1d",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Autocycle timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 960,
        "wires": [
            [
                "3e0a3bc9.7ca914"
            ]
        ]
    },
    {
        "id": "3e0a3bc9.7ca914",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Autocycle",
        "func": "if (flow.get(\"Autocycle\")) {\n    var positionNow = global.get(\"IP\");\n    var positionNext = positionNow;\n    var positionA = global.get(\"PositionA\");\n    var positionB = global.get(\"PositionB\");\n    \n    if (positionNow == positionA) {\n        positionNext = positionB;\n    } else {\n        positionNext = positionA;\n    }\n    \n    return {payload:\"FP\"+positionNext.toString()};\n} else {\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 960,
        "wires": [
            [
                "bf09909f.f88d3"
            ]
        ]
    }
]