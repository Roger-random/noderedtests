[
    {
        "id": "96d8407e.610f7",
        "type": "tab",
        "label": "Z axis",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ea4c2861.9f2658",
        "type": "tab",
        "label": "Load cell",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e9560dcf.9777c",
        "type": "tab",
        "label": "Indicator",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a273c16d.a6548",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#dd8dc4",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#dd8dc4",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#dd8dc4",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#efc8e2",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#dd8dc4",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "3D Printer Test",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "2c4bee50.ad8412",
        "type": "serial-port",
        "z": "",
        "serialport": "COM5",
        "serialbaud": "250000",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "\\n",
        "responsetimeout": "10000"
    },
    {
        "id": "cb9c6f66.54e12",
        "type": "ui_tab",
        "z": "",
        "name": "Squish test",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a516f7a8.528348",
        "type": "ui_group",
        "z": "",
        "name": "Movement",
        "tab": "cb9c6f66.54e12",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b441edb7.9f6b4",
        "type": "ui_group",
        "z": "",
        "name": "Load Cell",
        "tab": "cb9c6f66.54e12",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "15af2513.f48cdb",
        "type": "serial-port",
        "z": "",
        "serialport": "COM7",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "bce2382.dc8b5c8",
        "type": "serial-port",
        "z": "",
        "serialport": "COM8",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "1000"
    },
    {
        "id": "57c51ec8.823af",
        "type": "ui_group",
        "z": "",
        "name": "Indicator",
        "tab": "cb9c6f66.54e12",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "ff5f131f.6e8f3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a516f7a8.528348",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "9d68e6ce.7f9708",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a516f7a8.528348",
        "order": 12,
        "width": 6,
        "height": 1
    },
    {
        "id": "afe5eb9b.f478f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a516f7a8.528348",
        "order": 19,
        "width": 6,
        "height": 1
    },
    {
        "id": "65ab7d19.0d5844",
        "type": "serial request",
        "z": "96d8407e.610f7",
        "name": "3D Printer",
        "serial": "2c4bee50.ad8412",
        "x": 240,
        "y": 100,
        "wires": [
            [
                "aa50211d.629ba",
                "1f300358.acab5d",
                "cb63aceb.5a40e",
                "bc0d7ea8.cb428"
            ]
        ]
    },
    {
        "id": "aa50211d.629ba",
        "type": "debug",
        "z": "96d8407e.610f7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "25f1430b.aba9dc",
        "type": "link in",
        "z": "96d8407e.610f7",
        "name": "To Printer",
        "links": [
            "92ef9e46.93b4a",
            "87bb3967.65e638",
            "41d4c506.c4183c",
            "36e6968.ce96a6a",
            "7457c34e.b0c51c",
            "fc27f264.2f45b",
            "ee2e5210.c74be",
            "24c352be.1f8a6e",
            "50675307.cf167c"
        ],
        "x": 95,
        "y": 100,
        "wires": [
            [
                "65ab7d19.0d5844",
                "31a6b0.4646595",
                "63afdde1.164314"
            ]
        ]
    },
    {
        "id": "12bed135.b4e95f",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Detect start",
        "func": "if (msg.payload !== undefined &&\n    msg.payload.indexOf(\"start\") != -1) {\n    return {payload:\"start\"};\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 420,
        "wires": [
            [
                "c4f6e240.d1606"
            ]
        ]
    },
    {
        "id": "7b06aca7.c5b924",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Stow position",
        "func": "return [[{payload:\"G0 Z260 F3000\"}, // Z+ straight up away from work\n         {payload:\"G0 X10 Y10 F12000\"}, // Stow X and Y\n         {payload:\"G0 Z10 F3000\"}]]; // Stow Z",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 540,
        "wires": [
            [
                "7457c34e.b0c51c"
            ]
        ]
    },
    {
        "id": "f857dc2a.bb66e",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "Startup",
        "group": "a516f7a8.528348",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "start",
        "payloadType": "str",
        "topic": "",
        "x": 240,
        "y": 460,
        "wires": [
            [
                "c4f6e240.d1606"
            ]
        ]
    },
    {
        "id": "e184514f.2e398",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "Stow",
        "group": "a516f7a8.528348",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Stow",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "7b06aca7.c5b924"
            ]
        ]
    },
    {
        "id": "1f300358.acab5d",
        "type": "link out",
        "z": "96d8407e.610f7",
        "name": "From Printer",
        "links": [
            "fab9e347.34d9e",
            "4b5f33e8.19b7ac"
        ],
        "x": 395,
        "y": 100,
        "wires": []
    },
    {
        "id": "fab9e347.34d9e",
        "type": "link in",
        "z": "96d8407e.610f7",
        "name": "",
        "links": [
            "1f300358.acab5d"
        ],
        "x": 95,
        "y": 420,
        "wires": [
            [
                "12bed135.b4e95f"
            ]
        ]
    },
    {
        "id": "c4f6e240.d1606",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Startup sequence",
        "func": "if (msg.payload == \"start\") {\n    return [[{payload:\"G28\"},\n             {payload:\"G0 Z130 F3000\"},\n             {payload:\"G0 X120 Y105 F12000\"}]];    \n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 440,
        "wires": [
            [
                "7457c34e.b0c51c"
            ]
        ]
    },
    {
        "id": "7457c34e.b0c51c",
        "type": "link out",
        "z": "96d8407e.610f7",
        "name": "",
        "links": [
            "25f1430b.aba9dc"
        ],
        "x": 615,
        "y": 480,
        "wires": []
    },
    {
        "id": "cb63aceb.5a40e",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "a516f7a8.528348",
        "order": 21,
        "width": 0,
        "height": 0,
        "name": "Response",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "x": 440,
        "y": 160,
        "wires": []
    },
    {
        "id": "31a6b0.4646595",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "a516f7a8.528348",
        "order": 20,
        "width": 0,
        "height": 0,
        "name": "Command",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 250,
        "y": 160,
        "wires": []
    },
    {
        "id": "ff23564c.dc00e8",
        "type": "ui_slider",
        "z": "96d8407e.610f7",
        "name": "Step size slider",
        "label": "",
        "tooltip": "",
        "group": "a516f7a8.528348",
        "order": 13,
        "width": 1,
        "height": 5,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "-2",
        "max": "1",
        "step": "1",
        "x": 260,
        "y": 620,
        "wires": [
            [
                "c7635fa5.28d9e"
            ]
        ]
    },
    {
        "id": "74d0fe27.f9822",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "a516f7a8.528348",
        "order": 15,
        "width": 5,
        "height": 1,
        "name": "Step size output",
        "label": "Step Size",
        "format": "{{msg.payload}}mm",
        "layout": "row-left",
        "x": 680,
        "y": 620,
        "wires": []
    },
    {
        "id": "c7635fa5.28d9e",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Calculate step size",
        "func": "var stepSize = Math.pow(10,msg.payload); \nflow.set(\"stepSize\", stepSize);\nmsg.payload = stepSize;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nflow.set(\"stepSize\", 0.1);",
        "finalize": "",
        "x": 470,
        "y": 620,
        "wires": [
            [
                "74d0fe27.f9822"
            ]
        ]
    },
    {
        "id": "862cfd70.d9459",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "a516f7a8.528348",
        "order": 14,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Step Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "+",
        "payloadType": "str",
        "topic": "",
        "x": 240,
        "y": 680,
        "wires": [
            [
                "d6640bf1.a75c68"
            ]
        ]
    },
    {
        "id": "ff7c458c.09ae98",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "a516f7a8.528348",
        "order": 18,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Step Down",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "-",
        "payloadType": "str",
        "topic": "",
        "x": 250,
        "y": 720,
        "wires": [
            [
                "d6640bf1.a75c68"
            ]
        ]
    },
    {
        "id": "d6640bf1.a75c68",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Step Z",
        "func": "var positionZ = parseFloat(flow.get(\"positionZ\"));\nvar stepSize = parseFloat(flow.get(\"stepSize\"));\nvar feedrate = parseFloat(flow.get(\"feedrate\"));\nvar newZ = positionZ;\n\nif (msg.payload==='+') {\n    newZ += stepSize;\n} else if (msg.payload === '-') {\n    newZ -= stepSize;\n}\n\nreturn {payload:\"G0 Z\"+newZ.toString()+\" F\"+feedrate.toString()};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 700,
        "wires": [
            [
                "fc27f264.2f45b"
            ]
        ]
    },
    {
        "id": "fc27f264.2f45b",
        "type": "link out",
        "z": "96d8407e.610f7",
        "name": "",
        "links": [
            "25f1430b.aba9dc"
        ],
        "x": 595,
        "y": 700,
        "wires": []
    },
    {
        "id": "afd0581f.e6bb38",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Initialize",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-1",
        "payloadType": "num",
        "x": 100,
        "y": 620,
        "wires": [
            [
                "ff23564c.dc00e8"
            ]
        ]
    },
    {
        "id": "63afdde1.164314",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Request position after every move",
        "func": "if (typeof msg.payload == \"string\" &&\n    (msg.payload.indexOf(\"G0 \") === 0 ||\n     msg.payload.indexOf(\"G1 \") === 0)) {\n         return {payload:\"M114\"};\n     }\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 280,
        "wires": [
            [
                "24c352be.1f8a6e"
            ]
        ]
    },
    {
        "id": "bc0d7ea8.cb428",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Save Z reported by position update",
        "func": "if (msg.payload !== undefined) {\n    var indexZ = msg.payload.indexOf(\"Z:\");\n    var indexE = msg.payload.indexOf(\"E:\");\n    if (indexZ != -1 && indexE != -1) {\n        var positionZ = parseFloat(msg.payload.substring(indexZ+2, indexE));\n        flow.set(\"positionZ\", positionZ);\n    }\n}",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 200,
        "wires": []
    },
    {
        "id": "63f46856.6fb5c8",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Periodically request position",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "M114",
        "payloadType": "str",
        "x": 300,
        "y": 320,
        "wires": [
            [
                "24c352be.1f8a6e"
            ]
        ]
    },
    {
        "id": "24c352be.1f8a6e",
        "type": "link out",
        "z": "96d8407e.610f7",
        "name": "",
        "links": [
            "25f1430b.aba9dc"
        ],
        "x": 515,
        "y": 300,
        "wires": []
    },
    {
        "id": "59f888bc.57f268",
        "type": "ui_slider",
        "z": "96d8407e.610f7",
        "name": "Speed slider",
        "label": "",
        "tooltip": "mm/sec",
        "group": "a516f7a8.528348",
        "order": 16,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "1",
        "max": "50",
        "step": 1,
        "x": 250,
        "y": 780,
        "wires": [
            [
                "98dcdb81.59e1c8"
            ]
        ]
    },
    {
        "id": "652a0cf2.1c0714",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Initialize",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25",
        "payloadType": "num",
        "x": 100,
        "y": 780,
        "wires": [
            [
                "59f888bc.57f268"
            ]
        ]
    },
    {
        "id": "98dcdb81.59e1c8",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Calculate Feedrate",
        "func": "// Slider is in mm/sec, convert to mm/minute\nvar feedrate = msg.payload * 60;\nflow.set(\"feedrate\",feedrate);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 780,
        "wires": [
            [
                "258b7e80.6d7a42"
            ]
        ]
    },
    {
        "id": "258b7e80.6d7a42",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "a516f7a8.528348",
        "order": 17,
        "width": 5,
        "height": 1,
        "name": "Feed rate output",
        "label": "Speed",
        "format": "{{msg.payload}} mm/sec",
        "layout": "row-right",
        "x": 680,
        "y": 780,
        "wires": []
    },
    {
        "id": "b61a1f4e.f9dd1",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "a516f7a8.528348",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "Set A",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 230,
        "y": 900,
        "wires": [
            [
                "31b93ab7.7ee7d6"
            ]
        ]
    },
    {
        "id": "31b93ab7.7ee7d6",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Store A",
        "func": "var positionZ = parseFloat(flow.get(\"positionZ\"));\nvar feedrate = parseFloat(flow.get(\"feedrate\"));\nvar hold = parseFloat(flow.get(\"hold\"));\n\nflow.set(\"setA\",{positionZ, feedrate, hold});\n\nvar mmsec = feedrate / 60.0;\n\nreturn {payload:positionZ.toString() +\n    \"mm @\" + mmsec.toString() + \n    \"mm/s for \" + hold.toString() + \"s\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 900,
        "wires": [
            [
                "9d55e534.21ab78"
            ]
        ]
    },
    {
        "id": "9d55e534.21ab78",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "a516f7a8.528348",
        "order": 6,
        "width": 5,
        "height": 1,
        "name": "Show A",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 660,
        "y": 900,
        "wires": []
    },
    {
        "id": "822918bd.4f38b8",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "a516f7a8.528348",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "Set B",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 230,
        "y": 940,
        "wires": [
            [
                "6bd80203.3c056c"
            ]
        ]
    },
    {
        "id": "6bd80203.3c056c",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Store B",
        "func": "var positionZ = parseFloat(flow.get(\"positionZ\"));\nvar feedrate = parseFloat(flow.get(\"feedrate\"));\nvar hold = parseFloat(flow.get(\"hold\"));\n\nflow.set(\"setB\",{positionZ, feedrate, hold});\n\nvar mmsec = feedrate / 60.0;\n\nreturn {payload:positionZ.toString() +\n    \"mm @\" + mmsec.toString() + \n    \"mm/s for \" + hold.toString() + \"s\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 940,
        "wires": [
            [
                "49bbe741.4b5648"
            ]
        ]
    },
    {
        "id": "49bbe741.4b5648",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "a516f7a8.528348",
        "order": 8,
        "width": 5,
        "height": 1,
        "name": "Show B",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 660,
        "y": 940,
        "wires": []
    },
    {
        "id": "1d08cb16.fbba85",
        "type": "ui_switch",
        "z": "96d8407e.610f7",
        "name": "",
        "label": "Autocycle",
        "tooltip": "",
        "group": "a516f7a8.528348",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 240,
        "y": 1040,
        "wires": [
            [
                "7c413182.78699"
            ]
        ]
    },
    {
        "id": "ff7154d6.634738",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Initialize",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 100,
        "y": 1040,
        "wires": [
            [
                "1d08cb16.fbba85"
            ]
        ]
    },
    {
        "id": "7c413182.78699",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Autocycle state",
        "func": "flow.set(\"autocycle\", msg.payload);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 1040,
        "wires": []
    },
    {
        "id": "68237b74.44af34",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Cycle",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 1100,
        "wires": [
            [
                "6fefa74.a5a9558"
            ]
        ]
    },
    {
        "id": "6fefa74.a5a9558",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Autocycle",
        "func": "if (flow.get(\"autocycle\")) {\n    var positionZ = flow.get(\"positionZ\");\n    var setA = flow.get(\"setA\");\n    var setB = flow.get(\"setB\");\n    \n    var lastMove = context.get(\"lastMove\");\n    var target = null;\n\n    if (lastMove === undefined) {\n        // First move - go to A.\n        target = setA;\n    } else {\n        if (positionZ != setA.positionZ) {\n            if (Date.now() - lastMove > setB.hold * 1000) {\n                target = setA;\n            }\n        } else {\n            if (Date.now() - lastMove > setA.hold * 1000) {\n                target = setB;\n            }\n        }\n    }\n\n    if (target !== null) {\n        context.set(\"lastMove\", Date.now());\n        return {payload:\"G0 Z\"+target.positionZ.toString()+\" F\"+target.feedrate.toString()};\n    }\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 1100,
        "wires": [
            [
                "50675307.cf167c"
            ]
        ]
    },
    {
        "id": "50675307.cf167c",
        "type": "link out",
        "z": "96d8407e.610f7",
        "name": "",
        "links": [
            "25f1430b.aba9dc"
        ],
        "x": 395,
        "y": 1100,
        "wires": []
    },
    {
        "id": "3e93c986.759976",
        "type": "comment",
        "z": "96d8407e.610f7",
        "name": "Global printer control",
        "info": "This section includes the actual serial I/O module to communicate with the printer, alongside several items that are global to printer communication and not specific to any single function.\n\nVirtual wires are used to allow other components to communicate with the printer without having wires criscrossing the entire flow like spaghetti.",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "38840319.147a3c",
        "type": "comment",
        "z": "96d8407e.610f7",
        "name": "Startup and shutdown",
        "info": "This section handles the startup and shutdown procedures.\n\nUpon startup the printer emits \"start\" and when this is seen, we launch into the homing cycle and move to the standard startup position roughly in the center of addressible space.\n\nThe user can also command the same start up procedure by pressing a button on the UI.\n\nThere's an associated button to put the device into a \"stow\" position close to the homing position. The benefit of doing this is to speed up the homing cycle upon next restart.",
        "x": 120,
        "y": 380,
        "wires": []
    },
    {
        "id": "143fe2bd.b6a71d",
        "type": "comment",
        "z": "96d8407e.610f7",
        "name": "Step size, direction, and speed",
        "info": "This section has the UI for controlling steps along the Z axis.\nThe vertical slider lets the user specify size of each step\nThe horizontal slider lets the user specify the speed for making that move.\nA button moves +Z with the selected step size at the selected speed, the other button moves -Z.",
        "x": 150,
        "y": 580,
        "wires": []
    },
    {
        "id": "3ead8452.d7b22c",
        "type": "comment",
        "z": "96d8407e.610f7",
        "name": "Auto cycling between two preset positions",
        "info": "Code to move between two set points at regular intervals.\nSet A and B buttons record the current Z location as well as the speed used to approach that location.\nAn on/off switch toggles automatic cycling.\nEvery second we check to see if the desired interval has passed and, if so, initiate move to the other position.",
        "x": 180,
        "y": 860,
        "wires": []
    },
    {
        "id": "577d9aa9.1f9824",
        "type": "ui_slider",
        "z": "96d8407e.610f7",
        "name": "Hold time",
        "label": "Hold",
        "tooltip": "seconds",
        "group": "a516f7a8.528348",
        "order": 9,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": "1",
        "max": "30",
        "step": 1,
        "x": 240,
        "y": 980,
        "wires": [
            [
                "ca1ba8b1.a10a88"
            ]
        ]
    },
    {
        "id": "ca1ba8b1.a10a88",
        "type": "function",
        "z": "96d8407e.610f7",
        "name": "Store hold",
        "func": "flow.set(\"hold\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 980,
        "wires": [
            [
                "d56b72f7.e586e"
            ]
        ]
    },
    {
        "id": "d56b72f7.e586e",
        "type": "ui_text",
        "z": "96d8407e.610f7",
        "group": "a516f7a8.528348",
        "order": 10,
        "width": 1,
        "height": 1,
        "name": "Show hold",
        "label": "",
        "format": "{{msg.payload}}s",
        "layout": "row-spread",
        "x": 670,
        "y": 980,
        "wires": []
    },
    {
        "id": "96bba12c.8c0e1",
        "type": "inject",
        "z": "96d8407e.610f7",
        "name": "Initialize",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 100,
        "y": 980,
        "wires": [
            [
                "577d9aa9.1f9824"
            ]
        ]
    },
    {
        "id": "61c1897d.d85068",
        "type": "serial in",
        "z": "ea4c2861.9f2658",
        "name": "Load Cell 2",
        "serial": "15af2513.f48cdb",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "117170f5.24da8f"
            ]
        ]
    },
    {
        "id": "5a62791b.3c3578",
        "type": "ui_chart",
        "z": "ea4c2861.9f2658",
        "name": "Load cell chart",
        "group": "b441edb7.9f6b4",
        "order": 1,
        "width": 18,
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 580,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "117170f5.24da8f",
        "type": "function",
        "z": "ea4c2861.9f2658",
        "name": "Process raw message",
        "func": "if (msg.payload.indexOf(\"HX711 not found.\") === 0) {\n    node.status({fill:\"red\", shape:\"ring\", text:\"HX711 absent\"});\n    return null;\n}\n\nvar raw = parseFloat(msg.payload);\nmsg.payload = raw;\nif (raw > -420000 || raw < -700000) {\n    // Discard values well outside observed normal range\n    node.status({fill:\"yellow\", shape:\"ring\", text:\"Rejected data\"});\n    return [null, msg];\n} else {\n    node.status({fill:\"green\", shape:\"dot\", text:\"Receiving data\"});\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 100,
        "wires": [
            [
                "5a62791b.3c3578"
            ],
            [
                "3dad5cf3.4a8c54"
            ]
        ],
        "outputLabels": [
            "data",
            "rejected"
        ]
    },
    {
        "id": "3dad5cf3.4a8c54",
        "type": "debug",
        "z": "ea4c2861.9f2658",
        "name": "Rejected",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 120,
        "wires": []
    },
    {
        "id": "80ebbd40.b5d04",
        "type": "ui_button",
        "z": "96d8407e.610f7",
        "name": "",
        "group": "a516f7a8.528348",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "G0 Z260 F3000",
        "payloadType": "str",
        "topic": "",
        "x": 230,
        "y": 500,
        "wires": [
            [
                "7457c34e.b0c51c"
            ]
        ]
    },
    {
        "id": "7431109d.260da",
        "type": "serial in",
        "z": "e9560dcf.9777c",
        "name": "Mitutoyo Indicator",
        "serial": "bce2382.dc8b5c8",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "82264c7c.d6c29"
            ]
        ]
    },
    {
        "id": "82264c7c.d6c29",
        "type": "function",
        "z": "e9560dcf.9777c",
        "name": "Parse hex output",
        "func": "var strHex = msg.payload;\nvar reading = 0;\nvar unit = \"?\";\n\n// Verify payload type\nif (typeof(strHex) != \"string\") {\n    node.status({fill:\"red\", shape:\"ring\", text:\"Nonstring input\"});\n    return null;\n}\n\n// Verify header\nif (strHex.substring(0,4) != \"FFFF\") {\n    node.status({fill:\"red\", shape:\"ring\", text:\"Bad header\"});\n    return null;\n}\n\n// Read digits\nreading = parseInt(strHex.substring(5,11));\nif (isNaN(reading)) {\n    node.status({fill:\"red\", shape:\"ring\", text:\"Bad digits\"});\n    return null;\n}\n\n// Read sign\nif (strHex[4] === '8') {\n    reading *= -1;\n} else if (strHex[4] != '0') {\n    node.status({fill:\"red\", shape:\"ring\", text:\"Invalid sign\"});\n    return null;\n}\n\n// Move decimal point\nreading /= Math.pow(10, parseInt(strHex[11]));\n\n// Extract units\nif (strHex[12] === '0') {\n    unit = \"mm\";\n} else if (strHex[12] === '1') {\n    unit = \"in\";\n} else {\n    node.status({fill:\"red\", shape:\"ring\", text:\"Invalid units\"});\n    return null;\n}\n\nnode.status({fill:\"green\", shape:\"dot\", text:\"Data OK\"});\n\nmsg = [{payload:reading}, {payload:unit}];\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 60,
        "wires": [
            [
                "f8112605.1523c8"
            ],
            [
                "c8d21d89.50667"
            ]
        ],
        "outputLabels": [
            "reading",
            "unit"
        ]
    },
    {
        "id": "f8112605.1523c8",
        "type": "ui_chart",
        "z": "e9560dcf.9777c",
        "name": "Indicator chart",
        "group": "57c51ec8.823af",
        "order": 1,
        "width": 18,
        "height": "5",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 560,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "c8d21d89.50667",
        "type": "ui_text",
        "z": "e9560dcf.9777c",
        "group": "57c51ec8.823af",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Indicator unit",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 550,
        "y": 80,
        "wires": []
    }
]